import _R from 'react';
import { StyledComponentClass as _S } from 'styled-components';
import { PropsType } from '.';
import _T from '../../types/ThemeType';
declare type BoxPropsType = PropsType & {
    flexWrap?: PropsType['wrap'];
    elementHeight?: PropsType['height'];
    elementWidth?: PropsType['width'];
    elementMaxHeight?: PropsType['height'];
    elementMinHeight?: PropsType['minHeight'];
    elementMaxWidth?: PropsType['maxWidth'];
    elementMinWidth?: PropsType['minWidth'];
    flexDirection?: PropsType['direction'];
    flexOrder?: PropsType['order'];
};
declare const StyledDiv: _S<_R.ClassAttributes<HTMLDivElement> & _R.HTMLAttributes<HTMLDivElement> & {
    justifyContent?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | "space-evenly" | undefined;
    alignItems?: "flex-start" | "flex-end" | "center" | "stretch" | undefined;
    alignContent?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
    direction?: "row" | "row-reverse" | "column" | "column-reverse" | undefined;
    inline?: boolean | undefined;
    height?: string | undefined;
    width?: string | undefined;
    margin?: import("../../utility/trbl").TrblType | undefined;
    padding?: import("../../utility/trbl").TrblType | undefined;
    maxHeight?: string | undefined;
    minHeight?: string | undefined;
    maxWidth?: string | undefined;
    minWidth?: string | undefined;
    wrap?: boolean | undefined;
    grow?: number | undefined;
    shrink?: number | undefined;
    basis?: string | undefined;
    order?: number | undefined;
    alignSelf?: "flex-start" | "flex-end" | "center" | "stretch" | "auto" | "baseline" | undefined;
    position?: "fixed" | "static" | "relative" | "absolute" | undefined;
    top?: string | undefined;
    right?: string | undefined;
    bottom?: string | undefined;
    left?: string | undefined;
} & {
    flexWrap?: boolean | undefined;
    elementHeight?: string | undefined;
    elementWidth?: string | undefined;
    elementMaxHeight?: string | undefined;
    elementMinHeight?: string | undefined;
    elementMaxWidth?: string | undefined;
    elementMinWidth?: string | undefined;
    flexDirection?: "row" | "row-reverse" | "column" | "column-reverse" | undefined;
    flexOrder?: number | undefined;
} & _R.HTMLProps<HTMLDivElement>, _T, _R.ClassAttributes<HTMLDivElement> & _R.HTMLAttributes<HTMLDivElement> & {
    justifyContent?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | "space-evenly" | undefined;
    alignItems?: "flex-start" | "flex-end" | "center" | "stretch" | undefined;
    alignContent?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
    direction?: "row" | "row-reverse" | "column" | "column-reverse" | undefined;
    inline?: boolean | undefined;
    height?: string | undefined;
    width?: string | undefined;
    margin?: import("../../utility/trbl").TrblType | undefined;
    padding?: import("../../utility/trbl").TrblType | undefined;
    maxHeight?: string | undefined;
    minHeight?: string | undefined;
    maxWidth?: string | undefined;
    minWidth?: string | undefined;
    wrap?: boolean | undefined;
    grow?: number | undefined;
    shrink?: number | undefined;
    basis?: string | undefined;
    order?: number | undefined;
    alignSelf?: "flex-start" | "flex-end" | "center" | "stretch" | "auto" | "baseline" | undefined;
    position?: "fixed" | "static" | "relative" | "absolute" | undefined;
    top?: string | undefined;
    right?: string | undefined;
    bottom?: string | undefined;
    left?: string | undefined;
} & {
    flexWrap?: boolean | undefined;
    elementHeight?: string | undefined;
    elementWidth?: string | undefined;
    elementMaxHeight?: string | undefined;
    elementMinHeight?: string | undefined;
    elementMaxWidth?: string | undefined;
    elementMinWidth?: string | undefined;
    flexDirection?: "row" | "row-reverse" | "column" | "column-reverse" | undefined;
    flexOrder?: number | undefined;
} & _R.HTMLProps<HTMLDivElement>>;
declare const StyledSpan: _S<_R.DetailedHTMLProps<_R.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, _T, _R.ClassAttributes<HTMLDivElement> & _R.HTMLAttributes<HTMLDivElement> & {
    justifyContent?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | "space-evenly" | undefined;
    alignItems?: "flex-start" | "flex-end" | "center" | "stretch" | undefined;
    alignContent?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined;
    direction?: "row" | "row-reverse" | "column" | "column-reverse" | undefined;
    inline?: boolean | undefined;
    height?: string | undefined;
    width?: string | undefined;
    margin?: import("../../utility/trbl").TrblType | undefined;
    padding?: import("../../utility/trbl").TrblType | undefined;
    maxHeight?: string | undefined;
    minHeight?: string | undefined;
    maxWidth?: string | undefined;
    minWidth?: string | undefined;
    wrap?: boolean | undefined;
    grow?: number | undefined;
    shrink?: number | undefined;
    basis?: string | undefined;
    order?: number | undefined;
    alignSelf?: "flex-start" | "flex-end" | "center" | "stretch" | "auto" | "baseline" | undefined;
    position?: "fixed" | "static" | "relative" | "absolute" | undefined;
    top?: string | undefined;
    right?: string | undefined;
    bottom?: string | undefined;
    left?: string | undefined;
} & {
    flexWrap?: boolean | undefined;
    elementHeight?: string | undefined;
    elementWidth?: string | undefined;
    elementMaxHeight?: string | undefined;
    elementMinHeight?: string | undefined;
    elementMaxWidth?: string | undefined;
    elementMinWidth?: string | undefined;
    flexDirection?: "row" | "row-reverse" | "column" | "column-reverse" | undefined;
    flexOrder?: number | undefined;
} & _R.HTMLProps<HTMLDivElement>>;
export { StyledDiv, StyledSpan, BoxPropsType };
